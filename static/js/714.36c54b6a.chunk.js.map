{"version":3,"file":"static/js/714.36c54b6a.chunk.js","mappings":"+SASaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAGMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,OAGL,EAEKC,EAAY,mCAAG,WAAMC,GAAN,wEACnBA,EAAMC,iBADa,kBAGXb,GAASc,EAAAA,EAAAA,IAAW,CAAEX,MAAAA,EAAOE,SAAAA,KAAaU,SAH/B,OAIjBC,EAAAA,GAAAA,QAAA,YACAZ,EAAS,IACTE,EAAY,IANK,gDAQjBU,EAAAA,GAAAA,MAAY,2BARK,yDAAH,sDA4BlB,OACI,UAACC,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,kBAAmB,CAAEC,EAAG,EAAGC,MAAO,SAEpCC,YAAU,EACVC,aAAa,MACbC,SAAUb,EAPZ,WASE,SAACc,EAAA,EAAD,CACYC,MAAM,QACNC,KAAK,QACLlB,KAAK,QACLC,MAAOP,EACPyB,GAAG,QACHL,aAAa,QACbM,MAAM,UACNC,SAAUvB,EACVwB,UAAQ,KAEpB,SAACN,EAAA,EAAD,CACYC,MAAM,WACNC,KAAK,WACLlB,KAAK,WACLC,MAAOL,EACPuB,GAAG,WACHL,aAAa,WACbM,MAAM,UAENC,SAAUvB,EACVwB,UAAQ,KAEpB,SAAC,KAAD,CACEJ,KAAK,SACLK,UAAW7B,IAAUE,EAFvB,SAGC,aAKR,E,UCnFD,EATkB,WAChB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAM,8EACN,SAACN,EAAD,MAGL,C,yLCTYkC,EAAUC,EAAAA,GAAAA,IAAH,+CAIPC,EAAYD,EAAAA,GAAAA,IAAH,4IAOTE,EAAOF,EAAAA,GAAAA,EAAH,gHAMJG,EAAQH,EAAAA,GAAAA,GAAH,myBA2BLI,EAAQJ,EAAAA,GAAAA,IAAH,sE","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage.js","pages/styled.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginThunk } from '../../redux/authOperations';\nimport { toast } from 'react-hot-toast';\nimport { Button } from '../ContactList/styled';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\n\nexport const LoginForm = () => {   //     Форма - бібл. MUI \n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n    // або      name === 'email' ? setEmail(value) : setPassword(value)\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try{\n      await dispatch(loginThunk({ email, password })).unwrap();\n      toast.success(`Welcome!`)\n      setEmail('');\n      setPassword('');\n    } catch(error) {\n      toast.error('Login error. Try again.')\n    }\n  };\n\n//   Альтернатива без handleChange і useState:\n//   const handleSubmit = async event => {\n//     event.preventDefault();\n//     const form = event.currentTarget;\n//     try{\n//       await dispatch(loginThunk({ \n//          email: form.elements.email.value,\n//          password: form.elements.password.value,\n//     })).unwrap();\n//       toast.success(`Welcome!`)\n//     form.reset();\n//     } catch(error) {\n//       toast.error('Login error. Try again.')\n//     }\n//   };\n\n  return (\n      <Box\n        component=\"form\"\n        sx={{\n          '& > :not(style)': { m: 1, width: '25ch'},\n        }}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <TextField \n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    id=\"email\"\n                    autoComplete=\"email\"\n                    color='warning' \n                    onChange={handleChange}\n                    required\n        />\n        <TextField                   \n                    label=\"password\" \n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    id=\"password\" \n                    autoComplete=\"password\"\n                    color='warning' \n                    // pattern: '[0-9]*'\n                    onChange={handleChange}\n                    required\n        />\n        <Button \n          type=\"submit\"\n          disabled={!email || !password}\n        >\n            Log in\n        </Button>\n      </Box>\n  );\n}\n","\nimport { LoginForm } from '../components/LoginForm/LoginForm';\nimport { Container, Text } from './styled';\n\nconst LoginPage = () => {\n  return (\n    <Container>\n      <Text>Welcome back! Stay connected by logging into your phonebook app account.</Text>\n      <LoginForm/>\n    </Container>\n  );\n}\n\nexport default LoginPage;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    margin-top: 50px;\n`; \n\nexport const Container = styled.div`\n    margin-top: 50px;\n    padding: 15px;\n    background-color: rgba(102, 124, 48, 0.6);\n    border-radius: 4px;\n`; \n\nexport const Text = styled.p`\n    font-family: 'Playfair Display', serif;\n    color: #ABA730;\n    font-size: 20px;\n`; \n\nexport const Title = styled.h1`\n    background: linear-gradient(to bottom, #cfc09f 22%,#634f2c 24%, #cfc09f 26%, #cfc09f 27%,#ffecb3 40%,#756300 78%); \n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n    color: #fff;\n    font-family: 'Playfair Display', serif;\n    position: relative;\n    text-transform: uppercase;\t\n    font-size: 80px;\n    margin-bottom: 40pxS;\n    font-weight: 400;\n    &:after {\n        background: none;\n        content: attr(data-heading);\n        left: 0;\n        top: 0;\n        z-index: -1;\n        position: absolute;\n        text-shadow: \n            -1px 0 1px #c6bb9f, \n            0 1px 1px #c6bb9f, \n            5px 5px 10px rgba(0, 0, 0, 0.4),\n            -5px -5px 10px rgba(0, 0, 0, 0.4);\n    }\n`; \n\nexport const Image = styled.img`\n    margin-top: 5px;\n    border-radius: 4px;\n`;"],"names":["LoginForm","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","handleSubmit","event","preventDefault","loginThunk","unwrap","toast","Box","component","sx","m","width","noValidate","autoComplete","onSubmit","TextField","label","type","id","color","onChange","required","disabled","Wrapper","styled","Container","Text","Title","Image"],"sourceRoot":""}